{"version":3,"sources":["GeneratedCommand.js","utils.js","CheckBox.js","ValueField.js","Category.js","CommandOptions.js","schema.js","App.js","serviceWorker.js","index.js"],"names":["GeneratedCommand","props","generated","options","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","mandatoryArgs","Symbol","iterator","next","done","option","value","shortForm","concat","longForm","err","return","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","optionalArgs","selectedArgs","isValue","react_default","a","createElement","className","id","useId","useRef","CheckBox","type","current","onChange","e","target","checked","htmlFor","flag","name","explanation","ValueField","field","placeholder","Category","checkBoxes","category","map","arg","index","ValueField_ValueField","key","val","setOption","CheckBox_CheckBox","active","onClick","CommandOptions","activeIndex","setActiveIndex","selectedOptions","setSelectedOptions","categories","Category_Category","Object","objectSpread","Flag","classCallCheck","this","QUESTION_VALUE","Value","VERBOSE_FLAG","ALL_FLAG","SUBMIT_FLAG","REVISE_FLAG","BACKUP_FLAG","LOCAL_FLAG","INTERACTIVE_FLAG","VERSION_FLAG","HELP_FLAG","TESTS_FLAG","AUTHENTICATE_FLAG","NO_BROWSER_FLAG","UPDATE_FLAG","schema","App","_useState","useState","_useState2","slicedToArray","_useState3","OPTIONS","_useState4","GeneratedCommand_GeneratedCommand","CommandOptions_CommandOptions","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.8d45fdf3.chunk.js","sourcesContent":["import React from \"react\";\n\nimport \"./GeneratedCommand.css\";\n\nexport default function GeneratedCommand(props) {\n    let generated = \"python3 ok\";\n    if (props.options) {\n        for (const option of props.options.mandatoryArgs) {\n            if (option.shortForm) {\n                generated += ` -${option.shortForm}`;\n            } else {\n                generated += ` --${option.longForm}`;\n            }\n        }\n        for (const option of props.options.optionalArgs) {\n            if (props.selectedArgs[option.longForm]) {\n                if (option.shortForm) {\n                    generated += ` -${option.shortForm}`;\n                } else {\n                    generated += ` --${option.longForm}`;\n                }\n                if (option.isValue) {\n                    generated += ` ${props.selectedArgs[option.longForm]}`;\n                }\n            }\n        }\n    }\n    return (\n        <div className=\"GeneratedCommand\">\n            <code>\n                {generated}\n            </code>\n        </div>\n    );\n}\n","import { useRef } from \"react\";\n\nlet id = 0;\n\nexport default function useId() {\n    return useRef(++id);\n}\n","import React from \"react\";\nimport useId from \"./utils.js\";\n\nimport \"./CheckBox.css\";\n\nexport default function CheckBox(props) {\n    const id = useId();\n    return (\n        <div className=\"CheckBox custom-control custom-checkbox\">\n            <input\n                type=\"checkbox\"\n                className=\"custom-control-input\"\n                id={id.current}\n                onChange={e => props.onChange(e.target.checked)}\n            />\n            <label className=\"custom-control-label\" htmlFor={id.current}>\n                <b>\n                    {props.flag.name}\n                </b>\n                <br />\n                <small>\n                    {props.flag.explanation}\n                </small>\n            </label>\n        </div>\n    );\n}\n","import React from \"react\";\nimport useId from \"./utils.js\";\n\nimport \"./ValueField.css\";\n\nexport default function ValueField(props) {\n    const id = useId();\n    return (\n        <div className=\"ValueField\">\n            <div className=\"form-group\">\n                <label htmlFor={id.current}>\n                    <b>\n                        {props.field.name}\n                    </b>\n                    <br />\n                    <small>\n                        {props.field.explanation}\n                    </small>\n                </label>\n                <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    id={id.current}\n                    placeholder={props.field.placeholder}\n                    onChange={e => props.onChange(e.target.value)}\n                />\n            </div>\n        </div>\n    );\n}\n","import React from \"react\";\nimport \"./Category.css\";\nimport CheckBox from \"./CheckBox.js\";\nimport ValueField from \"./ValueField.js\";\n\nexport default function Category(props) {\n    const checkBoxes = props.category.optionalArgs.map((arg, index) => {\n        if (arg.isValue) {\n            return (\n                <ValueField\n                    field={arg}\n                    key={index}\n                    onChange={val => props.setOption(arg.longForm, val)}\n                />\n            );\n        } else {\n            return (\n                <CheckBox\n                    flag={arg}\n                    key={index}\n                    onChange={val => props.setOption(arg.longForm, val)}\n                />\n            );\n        }\n    });\n\n    const className = `Category ${props.active ? \"activated\" : \"deactivated\"}`;\n\n    return (\n        <div className=\"col-lg-3\">\n            <div className={className} onClick={props.onClick}>\n                <h3>\n                    {props.category.name}\n                </h3>\n                <div className=\"text-muted\">\n                    {props.category.explanation}\n                </div>\n                <div>\n                    {checkBoxes}\n                </div>\n            </div>\n        </div>\n    );\n}\n","import React from \"react\";\nimport Category from \"./Category.js\";\nimport \"./CommandOptions.css\";\n\nexport default function CommandOptions(props) {\n    const {\n        activeIndex, setActiveIndex, selectedOptions, setSelectedOptions,\n    } = props;\n\n    const categories = props.options.map(\n        // eslint-disable-next-line react/no-array-index-key\n        (category, index) => (\n            <Category\n                category={category}\n                key={index}\n                active={index === activeIndex}\n                onClick={() => setActiveIndex(index)}\n                setOption={(option, val) => {\n                    selectedOptions[index][option] = val;\n                    setSelectedOptions({ ...selectedOptions });\n                }}\n            />\n        ),\n    );\n    return (\n        <div className=\"CommandOptions row\">\n            {categories}\n        </div>\n    );\n}\n","class Flag {\n    constructor(shortForm, longForm, name, explanation) {\n        this.shortForm = shortForm;\n        this.longForm = longForm;\n        this.name = name;\n        this.explanation = explanation;\n        this.isValue = false;\n    }\n}\n\nclass Value {\n    constructor(shortForm, longForm, name, explanation) {\n        this.shortForm = shortForm;\n        this.longForm = longForm;\n        this.name = name;\n        this.explanation = explanation;\n        this.isValue = true;\n    }\n}\n\nclass Category {\n    constructor(name, explanation, mandatoryArgs, optionalArgs) {\n        this.name = name;\n        this.explanation = explanation;\n        this.mandatoryArgs = mandatoryArgs;\n        this.optionalArgs = optionalArgs;\n    }\n}\n\nconst QUESTION_VALUE = new Value(\"q\", \"question\", \"Select Question\",\n    \"Choose which question you want to work on. If you don't set this \"\n                + \"option, okpy will go through all the questions!\");\n\nconst VERBOSE_FLAG = new Flag(\"v\", \"verbose\", \"Verbose\",\n    \"Show the results of all tests, not just those that fail.\");\n\nconst ALL_FLAG = new Flag(null, \"all\", \"All\",\n    \"Run tests for all the questions in the config file, including optional questions.\");\n\nconst SUBMIT_FLAG = new Flag(null, \"submit\", \"Submit\",\n    \"Submit your progress so far on all questions in the assignment.\");\n\nconst REVISE_FLAG = new Flag(null, \"revise\", \"Revise\",\n    \"Submit your composition revisions for the assignment.\");\n\nconst BACKUP_FLAG = new Flag(null, \"backup\", \"Backup\",\n    \"Backup your progress so far on all questions in the assignment, without submitting.\");\n\nconst LOCAL_FLAG = new Flag(null, \"local\", \"Local\",\n    \"Run locally, without backing up to or downloading updates from the server.\");\n\nconst INTERACTIVE_FLAG = new Flag(\"i\", \"interactive\", \"Interactive Mode\",\n    \"Start the Python interpreter after a failed test, to help debug.\");\n\nconst VERSION_FLAG = new Flag(null, \"version\", \"Version\",\n    \"Print the current version of okpy and then exit.\");\n\nconst HELP_FLAG = new Flag(\"h\", \"help\", \"Help\",\n    \"Print the help message built into okpy and then exit.\");\n\nconst TESTS_FLAG = new Flag(null, \"tests\", \"View Tests\",\n    \"View all the test names available in the current assignment.\");\n\nconst AUTHENTICATE_FLAG = new Flag(null, \"authenticate\", \"Authenticate\",\n    \"Re-authenticate with okpy, even if you are already signed in.\");\n\nconst NO_BROWSER_FLAG = new Flag(null, \"no-browser\", \"No Browser\",\n    \"Do not use a web browser for authentication.\");\n\nconst UPDATE_FLAG = new Flag(null, \"update\", \"Update\",\n    \"Update okpy, if an update is available, and then exit.\");\n\nexport default [\n    new Category(\n        \"Unlock\",\n        \"You should unlock the test cases for each problem before solving it.\",\n        [\n            new Flag(\"u\", \"unlock\", \"Unlock\"),\n        ], [\n            QUESTION_VALUE,\n            LOCAL_FLAG,\n            NO_BROWSER_FLAG,\n        ],\n    ),\n    new Category(\n        \"Run Tests\",\n        \"After writing code, you should test it against the provided test cases.\",\n        [],\n        [\n            QUESTION_VALUE,\n            INTERACTIVE_FLAG,\n            VERBOSE_FLAG,\n            ALL_FLAG,\n            LOCAL_FLAG,\n            NO_BROWSER_FLAG,\n        ],\n    ),\n    new Category(\n        \"Submission\",\n        \"When you're ready, you can submit your code for us to grade.\",\n        [],\n        [\n            SUBMIT_FLAG,\n            REVISE_FLAG,\n            BACKUP_FLAG,\n            NO_BROWSER_FLAG,\n        ],\n    ),\n    new Category(\n        \"Advanced\",\n        \"Okpy is a powerful tool - try out some of the more advanced options!\",\n        [],\n        [\n            AUTHENTICATE_FLAG,\n            TESTS_FLAG,\n            VERSION_FLAG,\n            NO_BROWSER_FLAG,\n            UPDATE_FLAG,\n            HELP_FLAG,\n        ],\n    ),\n];\n","import React, { useState } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"bootstrap/dist/js/bootstrap.min.js\";\nimport \"./App.css\";\nimport GeneratedCommand from \"./GeneratedCommand.js\";\nimport CommandOptions from \"./CommandOptions.js\";\nimport OPTIONS from \"./schema.js\";\n\nfunction App() {\n    const [activeIndex, setActiveIndex] = useState(null);\n\n    const [selectedOptions, setSelectedOptions] = useState(OPTIONS.map(() => ({})));\n\n    return (\n        <div className=\"App container\">\n            <div className=\"row\">\n                <div className=\"col\">\n                    <br />\n                    <h1 className=\"display-4\">\n                        <strong>okpy</strong>\n                        {\" \"}\n                        Command Generator\n                    </h1>\n                </div>\n            </div>\n            <div className=\"row\">\n                <div className=\"col\">\n                    <GeneratedCommand\n                        options={OPTIONS[activeIndex]}\n                        selectedArgs={selectedOptions[activeIndex]}\n                    />\n                </div>\n            </div>\n            <CommandOptions\n                options={OPTIONS}\n                activeIndex={activeIndex}\n                setActiveIndex={setActiveIndex}\n                selectedOptions={selectedOptions}\n                setSelectedOptions={setSelectedOptions}\n            />\n        </div>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}